cmake_minimum_required(VERSION 3.16)

set(DspTool_known_comps static shared)
set(DspTool_comp_static NO)
set(DspTool_comp_shared NO)
foreach (DspTool_comp IN LISTS ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS)
	if (DspTool_comp IN_LIST DspTool_known_comps)
		set(DspTool_comp_${DspTool_comp} YES)
	else ()
		set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE
				"DspTool does not recognize component `${DspTool_comp}`.")
		set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
		return()
	endif ()
endforeach ()

if (DspTool_comp_static AND DspTool_comp_shared)
	set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE
			"DspTool `static` and `shared` components are mutually exclusive.")
	set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
	return()
endif ()

set(DspTool_static_targets "${CMAKE_CURRENT_LIST_DIR}/DspTool-static-targets.cmake")
set(DspTool_shared_targets "${CMAKE_CURRENT_LIST_DIR}/DspTool-shared-targets.cmake")

macro(DspTool_load_targets type)
	if (NOT EXISTS "${DspTool_${type}_targets}")
		set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE
				"DspTool `${type}` libraries were requested but not found.")
		set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
		return()
	endif ()
	include("${DspTool_${type}_targets}")
endmacro()

if (DspTool_comp_static)
	DspTool_load_targets(static)
elseif (DspTool_comp_shared)
	DspTool_load_targets(shared)
elseif (DEFINED DspTool_SHARED_LIBS AND DspTool_SHARED_LIBS)
	DspTool_load_targets(shared)
elseif (DEFINED DspTool_SHARED_LIBS AND NOT DspTool_SHARED_LIBS)
	DspTool_load_targets(static)
elseif (BUILD_SHARED_LIBS)
	if (EXISTS "${DspTool_shared_targets}")
		DspTool_load_targets(shared)
	else ()
		DspTool_load_targets(static)
	endif ()
else ()
	if (EXISTS "${DspTool_static_targets}")
		DspTool_load_targets(static)
	else ()
		DspTool_load_targets(shared)
	endif ()
endif ()